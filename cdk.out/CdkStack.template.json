{
  "Resources": {
    "CdkLambdaGetFunctionServiceRole8073573C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkLambdaGetFunction/ServiceRole/Resource"
      }
    },
    "CdkLambdaGetFunctionServiceRoleDefaultPolicy6DF069AD": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:Query",
                "dynamodb:Scan"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CDKDemoTableBDB55173",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CdkLambdaGetFunctionServiceRoleDefaultPolicy6DF069AD",
        "Roles": [
          {
            "Ref": "CdkLambdaGetFunctionServiceRole8073573C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkLambdaGetFunction/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "CdkLambdaGetFunction69C9847F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "CdkLambdaGetFunctionCodeS3Bucket8DE0C5D2"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "CdkLambdaGetFunctionCodeS3VersionKey8E0B1341"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "CdkLambdaGetFunctionCodeS3VersionKey8E0B1341"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "index.get",
        "Role": {
          "Fn::GetAtt": [
            "CdkLambdaGetFunctionServiceRole8073573C",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Environment": {
          "Variables": {
            "TZ": "Asia/Tokyo"
          }
        },
        "FunctionName": "CdkLambdaGetFunction",
        "MemorySize": 256,
        "Timeout": 300
      },
      "DependsOn": [
        "CdkLambdaGetFunctionServiceRoleDefaultPolicy6DF069AD",
        "CdkLambdaGetFunctionServiceRole8073573C"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkLambdaGetFunction/Resource",
        "aws:asset:path": "asset.830dd25168e49070936a54804f6810567934934d1f2ddd75529fa2f2fae4e20f",
        "aws:asset:property": "Code"
      }
    },
    "CdkLambdaGetFunctionApiPermissionGET2299E186": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CdkLambdaGetFunction69C9847F",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "CdkADeployedPI74C1F74A"
              },
              "/",
              {
                "Ref": "CdkADeployedPIDeploymentStageprod5D6822EB"
              },
              "/GET/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkLambdaGetFunction/ApiPermission.GET.."
      }
    },
    "CdkLambdaGetFunctionApiPermissionTestGET00D78B4E": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CdkLambdaGetFunction69C9847F",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "CdkADeployedPI74C1F74A"
              },
              "/test-invoke-stage/GET/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkLambdaGetFunction/ApiPermission.Test.GET.."
      }
    },
    "CdkLambdaGetFunctionApiPermissionGETget2B41F130": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CdkLambdaGetFunction69C9847F",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "CdkADeployedPI74C1F74A"
              },
              "/",
              {
                "Ref": "CdkADeployedPIDeploymentStageprod5D6822EB"
              },
              "/GET/get"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkLambdaGetFunction/ApiPermission.GET..get"
      }
    },
    "CdkLambdaGetFunctionApiPermissionTestGETget58E3060E": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CdkLambdaGetFunction69C9847F",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "CdkADeployedPI74C1F74A"
              },
              "/test-invoke-stage/GET/get"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkLambdaGetFunction/ApiPermission.Test.GET..get"
      }
    },
    "CdkLambdaPostFunctionServiceRole38F3F378": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkLambdaPostFunction/ServiceRole/Resource"
      }
    },
    "CdkLambdaPostFunctionServiceRoleDefaultPolicyED3DD907": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:Query",
                "dynamodb:Scan"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CDKDemoTableBDB55173",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CdkLambdaPostFunctionServiceRoleDefaultPolicyED3DD907",
        "Roles": [
          {
            "Ref": "CdkLambdaPostFunctionServiceRole38F3F378"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkLambdaPostFunction/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "CdkLambdaPostFunctionB34ACE89": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "CdkLambdaPostFunctionCodeS3BucketD1C82F06"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "CdkLambdaPostFunctionCodeS3VersionKey67FE2C91"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "CdkLambdaPostFunctionCodeS3VersionKey67FE2C91"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "index.post",
        "Role": {
          "Fn::GetAtt": [
            "CdkLambdaPostFunctionServiceRole38F3F378",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Environment": {
          "Variables": {
            "TZ": "Asia/Tokyo"
          }
        },
        "FunctionName": "CdkLambdaPostFunction",
        "MemorySize": 256,
        "Timeout": 300
      },
      "DependsOn": [
        "CdkLambdaPostFunctionServiceRoleDefaultPolicyED3DD907",
        "CdkLambdaPostFunctionServiceRole38F3F378"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkLambdaPostFunction/Resource",
        "aws:asset:path": "asset.830dd25168e49070936a54804f6810567934934d1f2ddd75529fa2f2fae4e20f",
        "aws:asset:property": "Code"
      }
    },
    "CdkLambdaPostFunctionApiPermissionPOSTpost17E6C10F": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CdkLambdaPostFunctionB34ACE89",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "CdkADeployedPI74C1F74A"
              },
              "/",
              {
                "Ref": "CdkADeployedPIDeploymentStageprod5D6822EB"
              },
              "/POST/post"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkLambdaPostFunction/ApiPermission.POST..post"
      }
    },
    "CdkLambdaPostFunctionApiPermissionTestPOSTpost6B5F35AD": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CdkLambdaPostFunctionB34ACE89",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "CdkADeployedPI74C1F74A"
              },
              "/test-invoke-stage/POST/post"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkLambdaPostFunction/ApiPermission.Test.POST..post"
      }
    },
    "CDKDemoTableBDB55173": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "ID",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "record_time",
            "KeyType": "RANGE"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "ID",
            "AttributeType": "S"
          },
          {
            "AttributeName": "record_time",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        },
        "TableName": "CDKDemoTable"
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CDKDemoTable/Resource"
      }
    },
    "cdkstackbucket2CF7B8C1": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "cdk-stack-bucket"
      },
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "CdkStack/cdk-stack-bucket/Resource"
      }
    },
    "CdkKinesisStream3C61F939": {
      "Type": "AWS::Kinesis::Stream",
      "Properties": {
        "ShardCount": 1,
        "Name": "CdkKinesisStream",
        "RetentionPeriodHours": 24
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkKinesisStream/Resource"
      }
    },
    "CdkADeployedPI74C1F74A": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "AWS-CDKでデプロイしたAPIGateway",
        "Name": "CdkADeployedPI"
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkADeployedPI/Resource"
      }
    },
    "CdkADeployedPIDeployment2A856147ef1f42d1a4baa8f0c8b467150d346fe9": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "CdkADeployedPI74C1F74A"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "CdkADeployedPIgetGET45D90E17",
        "CdkADeployedPIgetOPTIONS30C124C3",
        "CdkADeployedPIget35B48051",
        "CdkADeployedPIGETB66E77E0",
        "CdkADeployedPIOPTIONS8185F93D",
        "CdkADeployedPIpostOPTIONSEB65576A",
        "CdkADeployedPIpostPOSTDA55E535",
        "CdkADeployedPIpostD5008576",
        "CdkStack272B188B"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkADeployedPI/Deployment/Resource"
      }
    },
    "CdkADeployedPIDeploymentStageprod5D6822EB": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "CdkADeployedPI74C1F74A"
        },
        "DeploymentId": {
          "Ref": "CdkADeployedPIDeployment2A856147ef1f42d1a4baa8f0c8b467150d346fe9"
        },
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkADeployedPI/DeploymentStage.prod/Resource"
      }
    },
    "CdkADeployedPICloudWatchRoleDC21FFFC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "apigateway.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkADeployedPI/CloudWatchRole/Resource"
      }
    },
    "CdkADeployedPIAccount188C86DC": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "CdkADeployedPICloudWatchRoleDC21FFFC",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CdkADeployedPI74C1F74A"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkADeployedPI/Account"
      }
    },
    "CdkADeployedPIGETB66E77E0": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Fn::GetAtt": [
            "CdkADeployedPI74C1F74A",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "CdkADeployedPI74C1F74A"
        },
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "CdkAPIAuthorizer"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CdkLambdaGetFunction69C9847F",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkADeployedPI/Default/GET/Resource"
      }
    },
    "CdkADeployedPIOPTIONS8185F93D": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Fn::GetAtt": [
            "CdkADeployedPI74C1F74A",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "CdkADeployedPI74C1F74A"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkADeployedPI/Default/OPTIONS/Resource"
      }
    },
    "CdkADeployedPIget35B48051": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "CdkADeployedPI74C1F74A",
            "RootResourceId"
          ]
        },
        "PathPart": "get",
        "RestApiId": {
          "Ref": "CdkADeployedPI74C1F74A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkADeployedPI/Default/get/Resource"
      }
    },
    "CdkADeployedPIgetGET45D90E17": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "CdkADeployedPIget35B48051"
        },
        "RestApiId": {
          "Ref": "CdkADeployedPI74C1F74A"
        },
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "CdkAPIAuthorizer"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CdkLambdaGetFunction69C9847F",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkADeployedPI/Default/get/GET/Resource"
      }
    },
    "CdkADeployedPIgetOPTIONS30C124C3": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "CdkADeployedPIget35B48051"
        },
        "RestApiId": {
          "Ref": "CdkADeployedPI74C1F74A"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkADeployedPI/Default/get/OPTIONS/Resource"
      }
    },
    "CdkADeployedPIpostD5008576": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "CdkADeployedPI74C1F74A",
            "RootResourceId"
          ]
        },
        "PathPart": "post",
        "RestApiId": {
          "Ref": "CdkADeployedPI74C1F74A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkADeployedPI/Default/post/Resource"
      }
    },
    "CdkADeployedPIpostPOSTDA55E535": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "CdkADeployedPIpostD5008576"
        },
        "RestApiId": {
          "Ref": "CdkADeployedPI74C1F74A"
        },
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "CdkAPIAuthorizer"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CdkLambdaPostFunctionB34ACE89",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkADeployedPI/Default/post/POST/Resource"
      }
    },
    "CdkADeployedPIpostOPTIONSEB65576A": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "CdkADeployedPIpostD5008576"
        },
        "RestApiId": {
          "Ref": "CdkADeployedPI74C1F74A"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkADeployedPI/Default/post/OPTIONS/Resource"
      }
    },
    "CdkAPIAuthorizer": {
      "Type": "AWS::ApiGateway::Authorizer",
      "Properties": {
        "RestApiId": {
          "Ref": "CdkADeployedPI74C1F74A"
        },
        "Type": "COGNITO_USER_POOLS",
        "IdentitySource": "method.request.header.Authorization",
        "Name": "CdkAPIAuthorizer",
        "ProviderARNs": [
          "arn:aws:cognito-idp:ap-northeast-1:795622185554:userpool/ap-northeast-1_3YzFmcfso"
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkAPIAuthorizer"
      }
    },
    "CdkStack272B188B": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Fn::GetAtt": [
            "CdkADeployedPI74C1F74A",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "CdkADeployedPI74C1F74A"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "MOCK"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CdkStack/Resource"
      }
    }
  },
  "Parameters": {
    "CdkLambdaGetFunctionCodeS3Bucket8DE0C5D2": {
      "Type": "String",
      "Description": "S3 bucket for asset \"CdkStack/CdkLambdaGetFunction/Code\""
    },
    "CdkLambdaGetFunctionCodeS3VersionKey8E0B1341": {
      "Type": "String",
      "Description": "S3 key for asset version \"CdkStack/CdkLambdaGetFunction/Code\""
    },
    "CdkLambdaGetFunctionCodeArtifactHash5B5826A0": {
      "Type": "String",
      "Description": "Artifact hash for asset \"CdkStack/CdkLambdaGetFunction/Code\""
    },
    "CdkLambdaPostFunctionCodeS3BucketD1C82F06": {
      "Type": "String",
      "Description": "S3 bucket for asset \"CdkStack/CdkLambdaPostFunction/Code\""
    },
    "CdkLambdaPostFunctionCodeS3VersionKey67FE2C91": {
      "Type": "String",
      "Description": "S3 key for asset version \"CdkStack/CdkLambdaPostFunction/Code\""
    },
    "CdkLambdaPostFunctionCodeArtifactHash5045445D": {
      "Type": "String",
      "Description": "Artifact hash for asset \"CdkStack/CdkLambdaPostFunction/Code\""
    }
  },
  "Outputs": {
    "CdkADeployedPIEndpointAFAC03B2": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "CdkADeployedPI74C1F74A"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "CdkADeployedPIDeploymentStageprod5D6822EB"
            },
            "/"
          ]
        ]
      }
    }
  }
}